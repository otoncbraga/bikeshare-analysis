testeDia[2]
#Cria coluna com dias da semana
transmute(testeDia, week.day = format.Date(as.Date(testeDia[2]), "%A"))
#Instalar bibliotecas
install.packages("ggplot2"); #gerar gráficos
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("dplyr");
#Cria coluna com dias da semana
transmute(testeDia, week.day = format.Date(as.Date(testeDia[2]), "%A"))
#Cria coluna com dias da semana
mutate(testeDia, week.day = format.Date(as.Date(testeDia[2]), "%A"))
#Cria coluna com dias da semana
testeTodosDias -< Q1[2]
#Cria coluna com dias da semana
testeTodosDias <- Q1[2]
#Cria coluna com dias da semana
mutate(testeTodosDias, week.day = format.Date(as.Date(testeTodosDias[1]), "%A"))
mutate(testeDia, week.day = weekdays(as.Date(testeDia[2])))
mutate(testeDia, week.day = class(testeDia[2]))
View(testeDia)
View(testeDia)
transmute(testeDia, week.day = class(testeDia[2]))
testeDia <- mutate(testeDia, week.day = format.Date(as.Date(testeDia[2]), "%A"))
transmute(testeDia, week.day = class(testeDia[2]))
testeDia <- transmute(testeDia, week.day = class(testeDia[2]))
View(testeDia)
View(testeDia)
#Cria coluna com dias da semana
testeDia <- QTOTAL
testeDia <- mutate(testeDia, tipo1 = class(testeDia[1]), tipo2 = class(testeDia[2]), tipo6 = class(testeDia[6]), tipo3 = class(testeDia[3]))
View(testeDia)
View(testeDia)
testeDia <- mutate(testeDia, tipo1 = class(testeDia[1]), tipo2 = class(as.Date(testeDia[2])), tipo6 = class(testeDia[6]), tipo3 = class(testeDia[3]))
testeDia <- mutate(testeDia, testeDiaSemana = format(testeDia[2], format="%Y"))
View(testeDia)
View(testeDia)
testeDia <- mutate(testeDia, testeDiaSemana = format(testeDia[2], format="%Y"))
testeDia <- mutate(testeDia, testeDiaSemana = format(testeDia[2], format="%Y"));
write.csv(testeDia, "teste.csv")
dia <- “2016-06-06 10:00:12”
dia <- c("2016-06-06 10:00:12")
as.Date(dia)
weekdays(as.Date(dia))
Q1 <- mutate(Q1, week.day = weekdays(as.Date(testeDia[2])));
Q1 <- mutate(Q1, week.day = weekdays(as.POSIXct(testeDia[2])));
install.packages("lubridate");
library("lubridate");
dia <- ymd_hms(dia)
dia <- ymd_hms(dia)
wday(dia)
(dia)
(dia)
wday(dia)
weekdays(as.Date(dia))
weekdays(as.POSIXct(dia))
weekdays(as.POSIXct(as.Date(dia)))
testeDia <- mutate(testeDia, tipo1 = class(testeDia[1]), tipo2 = class(as.Date(testeDia)), tipo6 = class(testeDia[6]), tipo3 = class(testeDia[3]));
filter(QTOTAL, Start.date >= "2017-10-01")
filter(QTOTAL, Start.date >= as.Date("2017-10-01"))
filter(QTOTAL, Start.date == as.Date("2017-10-01"))
filter(QTOTAL, Start.date == as.Date("2017-10-01"))
#Cria coluna com dias da semana #!!!Ainda não está dando certo!!!!
testeDia <- QTOTAL
filter(QTOTAL, Start.date == as.Date("2017-10-01"))
teste42 %>% filter(between(QTOTAL$Start.date, "2017-10-01 00:00:00", "2017-03-31 23:59:59"))
teste42 <- filter(between(QTOTAL$Start.date, "2017-10-01 00:00:00", "2017-03-31 23:59:59"))
teste42 <- QTOTAL %>% filter(between(QTOTAL$Start.date, "2017-10-01 00:00:00", "2017-03-31 23:59:59"))
teste42 <- QTOTAL %>% filter(between(QTOTAL$Start.date, as.Date("2017-10-01 00:00:00"), as.Date("2017-03-31 23:59:59"))
teste42 <- QTOTAL %>% filter(between(QTOTAL$Start.date, as.Date("2017-10-01 00:00:00"), as.Date("2017-03-31 23:59:59")))
teste42 <- filter(QTOTAL, QTOTAL$Start.date > as.Date("2017-10-01 00:00:00"))
library("lubridate");
QTOTAL %>%filter(Start.date >= as.Date("2017-01-05"))
View(testeTodosDias)
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
Q1 %>% mutate(weekday = wday(Start.date))
Q1 %>% mutate(weekday = weekdays(Start.date))
Q1 %>% mutate(weekday = weekdays(Start.date))
Q1 %>% mutate(diaSemana = weekdays(Start.date))
Q1 %>% mutate(Q1::Start.date = weekdays(Start.date))
teste42 %>% transmute(Start.date = weekdays(Start.date))
QTOTAL %>% mutate(weekday = wday(Start.date))
QTOTAL <- QTOTAL %>% mutate(weekday = weekdays(Start.date))
QTOTAL <- QTOTAL %>% mutate(weekday = weekdays(QTOTAL::Start.date))
QTOTAL <- QTOTAL %>% mutate(weekday = weekdays(Start.date))
QTOTAL <- QTOTAL %>% mutate(weekday = wday(Start.date))
View(QTOTAL)
View(QTOTAL)
View(QTOTAL)
View(QTOTAL)
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date("2017-03-21") & Start.date <= as.Date("2017-06-20"))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, (Start.date >= as.Date("2017-03-21")) & (Start.date <= as.Date("2017-06-20")))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date("2017-03-21"))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= "2017-03-21")
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date.POSIXlt("2017-03-21"))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date.default("2017-03-21"))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date.default(2017-03-21))
QTOTAL <- QTOTAL %>% mutate(weekdayname = wday(Start.date, label=TRUE))
lubridate::wday
?lubridate::wday
QTOTAL <- QTOTAL %>% mutate(weekdaynamecompleto = wday(Start.date, label=TRUE, abbr = FALSE))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date.default("2017-03-21"))
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date > as.Date("2017-03-21"))
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
# Verão: 21 jun - 20 set
# Outono: 21 set - 20 dez
# Inverno: 21 dez - 20 mar
Primavera <- filter(QTOTAL, Start.date >= as.Date("2017-03-21"))
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date >= as.Date("2017-03-21"))
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(QTOTAL::Start.date >= as.Date("2017-03-21"))
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(QTOTAL[2] >= as.Date("2017-03-21"))
Primavera <- Primavera %>% mutate(season = "Spring")
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date >= as.Date("2017-03-21"))
#Adicionar estações do ano
#Filtra Estações
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date >= as.Date("2017-03-21 00:00:00"))
#Adicionar estações do ano
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=as.Date("2017-03-21") & Start.date<=as.Date("2017-06-20"))
#Adicionar coluna com dia
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date))
#Adicionar coluna com mês
QTOTAL <- QTOTAL %>% mutate(mes = month(Start.date))
#Adicionar coluna com ano
QTOTAL <- QTOTAL %>% mutate(ano = year(Start.date))
View(QTOTAL)
#exportarTabela
write.csv(QTOTAL, "tabela.csv")
library("dplyr");
#Adicionar estações do ano
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=as.Date("2017-03-21") & Start.date<=as.Date("2017-06-20"))
#Adicionar estações do ano
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=(as.Date("2017-03-21")) & Start.date<=(as.Date("2017-06-20")))
#Adicionar estações do ano
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=as.Date("2017-03-21") & Start.date<=as.Date("2017-06-20"))
Primavera <- Primavera %>% mutate(season = "spring")
#________________________
# Verão: 21 jun - 20 set
Verão <- QTOTAL %>% filter(Start.date>=as.Date("2017-06-21") & Start.date<=as.Date("2017-09-20"))
Verão <- Verão %>% mutate(season = "summer")
#________________________
# Outono: 21 set - 20 dez
Outono <- QTOTAL %>% filter(Start.date>=as.Date("2017-09-21") & Start.date<=as.Date("2017-12-20"))
Outono <- Outono %>% mutate(season = "fall")
#________________________
# Inverno: 21 dez - 20 mar
Inverno <- filter(QTOTAL, (Start.date>=as.Date("2017-12-21") & Start.date<=as.Date("2017-12-31")) & (Start.date>=as.Date("2017-01-01") & Start.date<=as.Date("2017-03-20")))
Inverno <- Inverno %>% mutate(season = "winter")
#Junta arquivos
QTOTAL <- rbind(rbind(Primavera, Verão), rbind(Outono, Inverno));
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
Q1 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q1-capitalbikeshare-tripdata.csv");
Q2 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q2-capitalbikeshare-tripdata.csv");
Q3 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q3-capitalbikeshare-tripdata.csv");
Q4 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q4-capitalbikeshare-tripdata.csv");
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
View(QTOTAL)
View(QTOTAL)
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n())
View(AlugueisPorDiaSemana)
View(AlugueisPorDiaSemana)
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
View(QTOTAL)
View(QTOTAL)
AlugueisPorDiaSemanaCasuais <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n()) %>% filter(Member.type=="Casual")
AlugueisPorDiaSemanaCasuais <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n()) %>% filter(QTOTAL::Member.type=="Casual")
AlugueisPorDiaSemanaCasuais <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n()) %>% filter(Member.type="Casual")
AlugueisPorDiaSemanaCasuais <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n()) %>% filter(Member.type=="Casual")
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
Q1 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q1-capitalbikeshare-tripdata.csv");
Q2 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q2-capitalbikeshare-tripdata.csv");
Q3 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q3-capitalbikeshare-tripdata.csv");
Q4 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q4-capitalbikeshare-tripdata.csv");
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#Adicionar estações do ano [[[AINDA NÃO ESTÁ FUNCIONANDO]]]
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=as.Date("2017-03-21") & Start.date<=as.Date("2017-06-20"))
Primavera <- Primavera %>% mutate(season = "spring")
#________________________
# Verão: 21 jun - 20 set
Verão <- QTOTAL %>% filter(Start.date>=as.Date("2017-06-21") & Start.date<=as.Date("2017-09-20"))
Verão <- Verão %>% mutate(season = "summer")
#________________________
# Outono: 21 set - 20 dez
Outono <- QTOTAL %>% filter(Start.date>=as.Date("2017-09-21") & Start.date<=as.Date("2017-12-20"))
Outono <- Outono %>% mutate(season = "fall")
#________________________
# Inverno: 21 dez - 20 mar
Inverno <- filter(QTOTAL, (Start.date>=as.Date("2017-12-21") & Start.date<=as.Date("2017-12-31")) & (Start.date>=as.Date("2017-01-01") & Start.date<=as.Date("2017-03-20")))
Inverno <- Inverno %>% mutate(season = "winter")
#Junta arquivos
QTOTAL <- rbind(rbind(Primavera, Verão), rbind(Outono, Inverno));
#Adicionar estações do ano [[[AINDA NÃO ESTÁ FUNCIONANDO]]]
#Filtra Estações
#________________________
# Primavera: 21 mar - 20 jun
Primavera <- QTOTAL %>% filter(Start.date>=as.Date("2017-03-21 00:00:00") & Start.date<=as.Date("2017-06-20 23:59:00"))
Primavera <- Primavera %>% mutate(season = "spring")
#________________________
# Verão: 21 jun - 20 set
Verão <- QTOTAL %>% filter(Start.date>=as.Date("2017-06-21") & Start.date<=as.Date("2017-09-20 23:59:00"))
Verão <- Verão %>% mutate(season = "summer")
#________________________
# Outono: 21 set - 20 dez
Outono <- QTOTAL %>% filter(Start.date>=as.Date("2017-09-21") & Start.date<=as.Date("2017-12-20 23:59:00"))
Outono <- Outono %>% mutate(season = "fall")
#________________________
# Inverno: 21 dez - 20 mar
Inverno <- filter(QTOTAL, (Start.date>=as.Date("2017-12-21") & Start.date<=as.Date("2017-12-31 23:59:00")) & (Start.date>=as.Date("2017-01-01") & Start.date<=as.Date("2017-03-20 23:59:00")))
Inverno <- Inverno %>% mutate(season = "winter")
#Junta arquivos
QTOTAL <- rbind(rbind(Primavera, Verão), rbind(Outono, Inverno));
#Total de Alugueis por dia da Semana
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
#Total de Alugueis por dia da Semana
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
View(AlugueisPorDiaSemana)
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#Total de Alugueis por dia da Semana
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n())
View(AlugueisPorDiaSemana)
#Total de Alugueis por dia da Semana
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n());
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
View(QTOTAL)
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#Total de Alugueis por dia da Semana
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n());
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
View(AlUgueisCasuais)
View(AlUgueisCasuais)
AlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
AlugueisPorDiaSemanaMembros <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
View(AlugueisPorDiaSemanaMembros)
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
AlugueisPorDiaSemanaMembros <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
AlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
AlugueisPorDiaSemanaMembros <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
AlugueisPorDiaSemanaMembros <- AlUgueisMembros %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
View(Inverno)
#________________________
# Inverno: 21 dez - 20 mar
Inverno <- filter(QTOTAL, (Start.date>=as.Date("2017-12-21") & Start.date<=as.Date("2017-12-31 23:59:00")) & (Start.date>=as.Date("2017-01-01") & Start.date<=as.Date("2017-03-20 23:59:00")))
nome <- c("Spring", "Summer", "Fall", "Winter", "Winter")
data_inicial <- c("2017-03-21","2017-06-21","2017-09-21","2017-12-21","2017-01-01")
data_final <- c("2017-06-20","2017-09-20","2017-12-20","2017-12-31","2017-03-20")
estações <- data.frame(nome,data_final,data_final)
View(estações)
View(estações)
estações <- data.frame(nome,data_inicial,data_final)
View(estações)
View(estações)
?dplyr::between()
teste <- c("2017-09-20", "2017-09-21", "2017-09-22", "2017-09-22", "2017-10-10")
dia <- c("1", "2", "3", "4", "5")
data <- c("2017-09-20", "2017-09-21", "2017-09-22", "2017-09-22", "2017-10-10")
teste <- data.frame(dia, data)
select(teste, between(data, "2017-09-20", "2017-09-21"))
library("dplyr");
select(teste, between(data, "2017-09-20", "2017-09-21"))
select(teste, between(data, as.Date("2017-09-20"), as.Date("2017-09-21")))
select(teste, data = between(data, as.Date("2017-09-20"), as.Date("2017-09-21")))
select(teste, data = "2017-09-20"))
select(teste, data = "2017-09-20")
select(teste, data = as.Date("2017-09-20"))
filter(teste, data = as.Date("2017-09-20"))
select(teste, data = between(data, as.Date("2017-09-20"), as.Date("2017-09-21")))
filter(teste, data == as.Date("2017-09-20"))
(filter(teste, data == as.Date("2017-09-20")))
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
Q1 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q1-capitalbikeshare-tripdata.csv");
Q2 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q2-capitalbikeshare-tripdata.csv");
Q3 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q3-capitalbikeshare-tripdata.csv");
Q4 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q4-capitalbikeshare-tripdata.csv");
delete.response(teste)
?delete.response
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
###############################
######### RESULTADOS ##########
###############################
#TOTAL DE ALUGUEIS POR DIA DA SEMANA
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count = n());
ggplot(data=AlugueisPorDiaSemana) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
#!![Usuários casuais utilizam mais nos sábados e domingos]!!
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
AlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaCasuais) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
#!![Usuários registrados utilizam mais de segunda a sexta]!!
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
AlugueisPorDiaSemanaMembros <- AlUgueisMembros %>% group_by(weekday_name) %>% summarize(count = n())
ggplot(data=AlugueisPorDiaSemanaMembros) + geom_bar(mapping = aes(x=weekday_name,y=count,group=1), stat="identity")
?mutate
?dplyr::mutate
testeteste <- c(1,2,2,6)
mean(testeteste)
#MÉDIA DE ALUGUÉIS POR DIA DA SEMANA
MediaAlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(media = mean());
library("sqldf");
ggplot(data=AlugueisPorDiaSemana)
AlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count_casual = n())
AlugueisPorDiaSemanaMembros <- AlUgueisMembros %>% group_by(weekday_name) %>% summarize(count_membro = n())
AlugueisPorDiaSemanaDetalhado = merge(AlugueisPorDiaSemana, AlugueisPorDiaSemanaCasuais, AlugueisPorDiaSemanaMembros, by="weekday_name")
AlugueisPorDiaSemanaDetalhado = merge(AlugueisPorDiaSemanaCasuais, AlugueisPorDiaSemanaMembros, by="weekday_name")
#Fazer o merge em AlugueisPorDiaSemanaDetalhado, com o total dos dois tipos de usuario, de casual e de membro, pelo dia da semana
AlugueisPorDiaSemanaDetalhado = merge(AlugueisPorDiaSemana, (merge(AlugueisPorDiaSemanaCasuais, AlugueisPorDiaSemanaMembros, by="weekday_name")),by="weekday_name")
###############################
######### RESULTADOS ##########
###############################
#TOTAL DE ALUGUEIS POR DIA DA SEMANA
#!![Quarta-feira é o dia com mais aluguéis]!!
AlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count_all = n());
#Fazer o merge em AlugueisPorDiaSemanaDetalhado, com o total dos dois tipos de usuario, de casual e de membro, pelo dia da semana
AlugueisPorDiaSemanaDetalhado = merge(AlugueisPorDiaSemana, (merge(AlugueisPorDiaSemanaCasuais, AlugueisPorDiaSemanaMembros, by="weekday_name")),by="weekday_name")
ggplot(data=AlugueisPorDiaSemanaDetalhado) + geom_smooth(mapping = aes(x=weekday_name, y=count_casual, color="red")) + geom_smooth(mapping = aes(x=weekday_name, y=count_membro, color="blue"))
###############################
######### RESULTADOS ##########
###############################
#TOTAL DE ALUGUEIS POR DIA DA SEMANA
#!![Quarta-feira é o dia com mais aluguéis]!!
TotalAlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count_all = n());
#!![Usuários casuais utilizam mais nos sábados e domingos]!!
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
TotalAlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count_casual = n())
#!![Usuários registrados utilizam mais de segunda a sexta]!!
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
TotalAlugueisPorDiaSemanaMembros <- AlUgueisMembros %>% group_by(weekday_name) %>% summarize(count_membro = n())
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
ggplot(data=TotalAlugueisPorDiaSemanaDetalhado) + geom_smooth(mapping = aes(x=weekday_name, y=count_casual, color="red")) + geom_smooth(mapping = aes(x=weekday_name, y=count_membro, color="blue"))
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
Q1 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q1-capitalbikeshare-tripdata.csv");
Q2 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q2-capitalbikeshare-tripdata.csv");
Q3 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q3-capitalbikeshare-tripdata.csv");
Q4 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q4-capitalbikeshare-tripdata.csv");
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#TOTAL DE ALUGUEIS POR DIA DA SEMANA
#!![Quarta-feira é o dia com mais aluguéis]!!
TotalAlugueisPorDiaSemana <- QTOTAL %>% group_by(weekday_name) %>% summarize(count_all = n());
#!![Usuários casuais utilizam mais nos sábados e domingos]!!
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
#!![Usuários casuais utilizam mais nos sábados e domingos]!!
AlUgueisCasuais <- filter(QTOTAL, Member.type=="Casual")
TotalAlugueisPorDiaSemanaCasuais <- AlUgueisCasuais %>% group_by(weekday_name) %>% summarize(count_casual = n())
#!![Usuários registrados utilizam mais de segunda a sexta]!!
AlUgueisMembros <- filter(QTOTAL, Member.type=="Member")
#!![Usuários registrados utilizam mais de segunda a sexta]!!
AlugueisMembros <- filter(QTOTAL, Member.type=="Member")
TotalAlugueisPorDiaSemanaMembros <- AlugueisMembros %>% group_by(weekday_name) %>% summarize(count_membro = n())
#Fazer o merge em TotalAlugueisPorDiaSemanaDetalhado, com o total dos dois tipos de usuario, de casual e de membro, pelo dia da semana
TotalAlugueisPorDiaSemanaDetalhado = merge(TotalAlugueisPorDiaSemana, (merge(TotalAlugueisPorDiaSemanaCasuais, TotalAlugueisPorDiaSemanaMembros, by="weekday_name")),by="weekday_name")
ggplot(data=TotalAlugueisPorDiaSemanaDetalhado) + geom_smooth(mapping = aes(x=weekday_name, y=count_casual, color="red")) + geom_smooth(mapping = aes(x=weekday_name, y=count_membro, color="blue"))
ggplot(data=TotalAlugueisPorDiaSemanaDetalhado) + geom_bar(mapping = aes(x=weekday_name, y=count_casual)) + geom_bar(mapping = aes(x=weekday_name, y=count_membro))
#Carregar bibliotecas
library("ggplot2");
library("sqldf");
library("dplyr");
library("lubridate");
Q1 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q1-capitalbikeshare-tripdata.csv");
Q2 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q2-capitalbikeshare-tripdata.csv");
Q3 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q3-capitalbikeshare-tripdata.csv");
Q4 <- read.csv("C:/Users/johnattan.douglas/Desktop/capitalbikeshare/2017Q4-capitalbikeshare-tripdata.csv");
#Juntar as 4 partes em um único lugar
QTOTAL <- rbind(rbind(Q1, Q2), rbind(Q3, Q4));
#Adicionar coluna com dia do mês, mês, ano, dia da semana (1 a 7), dia da semana (nome)
QTOTAL <- QTOTAL %>% mutate(dia = mday(Start.date), mes = month(Start.date), ano = year(Start.date), weekday = wday(Start.date), weekday_name = wday(Start.date, label=TRUE, abbr = FALSE))
#=======================================#
#TOTAL DE ALUGUÉIS POR MÊS
TotalAlugueisPorMes <- QTOTAL %>% group_by(mes) %>% summarize(count = n());
ggplot(data=TotalAlugueisPorMes) + geom_bar(mapping = aes(x=mes,y=count,group=1), stat="identity")
